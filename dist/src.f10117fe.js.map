{"version":3,"sources":["src/util/V2.ts","src/Board/Location.ts","src/Board/Board.ts","src/Board/BoardView.ts","src/constants.ts","src/Components/MoveListComponent.ts","src/Controller.ts","src/logic/MoveList.ts","src/logic/Referee.ts","src/logic/geometry.ts","src/index.ts","../../.config/yarn/global/node_modules/parcel-bundler/src/builtins/bundle-url.js","../../.config/yarn/global/node_modules/parcel-bundler/src/builtins/css-loader.js","../../.config/yarn/global/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","bundle","require","updateLink","link","newLink","cloneNode","onload","remove","href","split","Date","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","setTimeout","links","document","querySelectorAll","i","length","module","OVERLAY_ID","OldModule","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","window","reload","close","onclose","log","removeErrorOverlay","error","message","overlay","createErrorOverlay","body","appendChild","getElementById","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["export default class V2  {\n    private _x: number;\n    private _y: number;\n\n    constructor(x: number,y: number) {\n        this._x = +x;\n        this._y = +y;\n    }\n\n    get x(): number {\n        return this._x;\n    }\n\n    get y(): number {\n        return this._y;\n    }\n\n    get object(): {x: number, y: number} {\n        return {\n            x: this._x,\n            y: this._y\n        }\n    }\n\n    static fromObject(obj: {x: number, y: number}) {\n        return new V2(obj.x, obj.y);\n    }\n\n    static fromArray(arr: [number, number]): V2 {\n        return new V2(arr[0], arr[1]);\n    }\n\n    /*---- Operations ----*/\n\n    add(v2: V2): this {\n        this._x += v2.x;\n        this._y += v2.y;\n        return this;\n    }\n\n    static add(v1: V2, v2: V2): V2 {\n        return new V2(v1.x + v2.x, v1.y + v2.y);\n    }\n\n    /*---- Geometry ----*/\n    static midpoint(v: V2, w: V2): V2 {\n        return new V2((v.x + w.x) / 2, (v.y + w.y) / 2);\n    }\n\n    static distance(v:V2, w: V2): number {\n        return Math.sqrt(Math.pow(v.x - w.x, 2) + Math.pow(v.y - w.y, 2));\n    }\n}","import V2 from \"../util/V2\";\n\nexport default class Location {\n    constructor(\n        public x: number,\n        public y: number,\n        public isFilled: boolean = false,\n        public isLocation: boolean = false,\n        public isSelected: boolean = false) {\n    }\n\n    static fromString(x: number, y: number, str: string) {\n        switch (str) {\n            case '1':\n                return new Location(x, y, true, true, false);\n            case '0':\n                return new Location(x, y, false, true, false);\n            default:\n                return new Location(x, y, false, false, false);\n        }\n    }\n\n    get v2(): V2 {\n        return new V2(this.x, this.y);\n    }\n}","import Location from './Location';\nimport V2 from '../util/V2';\nimport { Move } from '../logic/MoveList';\n\nexport default class Board {\n    private _grid: Location[][] = [[]];\n    public maxX: number;\n    public maxY: number;\n\n    constructor(grid: Location[][]) {\n        this._grid = grid;\n        this.maxX = this._grid[0].length - 1;\n        this.maxY = this._grid.length - 1;\n    }\n\n    static fromString(string: string): Board | any {\n        return new Board(string.trim().split('\\n')\n            .map((rowString: string) => rowString.trim().split(''))\n            .map((row: string[], y: number) => \n                row.map((col: string, x: number) => {\n                    return Location.fromString(x,y,col);\n                })));\n    }\n\n    get grid(): Location[][] {\n        return this._grid;\n    }\n\n    get hasStoneSelected(): boolean {\n        return this._grid.flat(2).some((loc: Location) => loc.isSelected);\n    }\n\n    get selectedStone(): Location {\n        return this._grid.flat(2).find((selected: Location) => selected.isSelected);\n    }\n\n    prettyLog(): void {\n        console.log(\"Board:\");\n        console.log(\n            this._grid.map(row => (\n                row.map(col => {\n                    if (col.isFilled) {\n                        return \"1\";\n                    }\n                    if (col.isLocation) {\n                        return \"0\"\n                    }\n                    return \"x\";\n                }).join(\"\")\n            )).join(\"\\n\")\n        )\n    }\n\n    // Is there any other way to overload this?\n    getStoneRef(...args: any[]): Location {\n        if (args[0] instanceof V2) {\n            return this._grid[+args[0].y][+args[0].x];\n        }\n\n        // (number, number), ASSUME\n        return this._grid[+args[1]][+args[0]];\n    }\n\n    clearStoneSelect(): void {\n        this._grid.flat(2)\n            .map((location: Location) => location.isSelected = false);\n    }\n\n    inBoardRange(coords: V2): boolean {\n        const { x, y } = coords;\n            \n        return (\n            x >= 0 && x <= this.maxX\n            &&\n            y >= 0 && y <= this.maxY\n        );\n    }\n\n    selectStone(x: number,y: number): void {\n        this.clearStoneSelect();\n        this.getStoneRef(x,y).isSelected = true;\n    }\n\n    moveStone(move: Move): void {\n        this.getStoneRef(move.from).isFilled = false;\n        this.getStoneRef(V2.midpoint(move.from, move.to)).isFilled = false;\n        this.getStoneRef(move.to).isFilled = true;\n    }\n}","import Location from './Location';\nimport Board from \"./Board\";\n\nexport default class BoardView {\n    board: Board;\n    private _container: HTMLElement;\n\n    constructor(container: HTMLElement, board: Board) {\n        if (!container) {\n            console.warn(\"Tried to instantiate a BoarView without container\");\n            return;\n        }\n\n        this.board = board;\n        this._container = container;\n\n        this.render();\n    }\n\n    getClassForRender(location: Location): string {\n        let classString = 'col';\n\n        if (location.isLocation) {\n            classString += ' isLocation';\n        }\n        if (location.isFilled) {\n            classString += ' isFilled';\n        }\n        if (location.isSelected) {\n            classString += ' isSelected';\n        }\n\n        return classString;\n    }\n\n    boardToHtmlString() {\n        const str = this.board.grid.map((row,y) => (\n            `<div class=\"board-row\">\n                ${row.map((loc,x) => (\n                    `<div class=\"${this.getClassForRender(loc)}\" data-coords=\"${y},${x}\"></div>`\n                )).join(\"\")}\n            </div>`\n        )).join(\"\");\n        return str;\n    }\n\n    render(): void {\n        this._container.innerHTML = this.boardToHtmlString();\n    }\n}","export default {\n    BOARD_CONTAINER: '.board',\n}","import MoveList, { Move } from \"../logic/MoveList\";\n\nexport default class MoveListComponent {\n    _container: HTMLElement;\n    moveList: MoveList;\n\n    constructor(container: HTMLElement) {\n        this._container = container;\n        this.render();\n    }\n\n    updateList(moveList: MoveList) {\n        this.moveList = moveList;\n        this.render();\n    }\n\n    getListItems(): string {\n        return this.moveList.map((move: Move) => {\n            const {x,y} = move.from;\n            const {x: toX, y: toY} = move.to;\n            return `<li>(${x}, ${y}) => (${toX}, ${toY})</li>`\n        }).join('');\n    }\n\n    clearList() {\n        this.moveList = null;\n        this.render();\n    }\n\n    render() {\n        this._container.innerHTML = ``;\n\n        if (this.moveList && this.moveList.length) {\n            this._container.style.display = 'block';\n            \n            this._container.innerHTML = `\n                <h2>Valid Moves from selection</h2>\n                <ul>\n                    ${this.getListItems()}\n                </ul>\n            `;\n        } else {\n            this._container.style.display = 'none';\n        }\n    }\n}","import BoardView from \"./Board/BoardView\";\nimport Board from \"./Board/Board\";\nimport Referee from \"./logic/Referee\";\nimport V2 from \"./util/V2\";\nimport ValidMoves from \"./Components/MoveListComponent\";\nimport MoveListComponent from \"./Components/MoveListComponent\";\n\nexport default class Controller {\n    _board: Board;\n    _boardView: BoardView;\n    boardContainer: HTMLElement;\n    _referee: Referee;\n    _validMoveElement: ValidMoves\n\n    constructor(boardContainer: HTMLElement, boardView: BoardView, referee: Referee) {\n        this._board = boardView.board;\n        this._boardView = boardView;\n        this.boardContainer = boardContainer;\n        this._referee = referee;\n\n        this.init();\n    }\n\n    init() {\n        this.createChildren()\n            .attachHandlers();\n    }\n\n    createChildren(): this {\n\n        const moveListcontainer = document.querySelector('.valid-moves') as HTMLElement;\n        this._validMoveElement = new MoveListComponent(moveListcontainer);\n\n        return this;\n    }\n\n    attachHandlers(): this {\n        this.boardContainer.addEventListener('click', this.handleBoardClick);\n\n        return this;\n    }\n\n    handleBoardClick = (event: MouseEvent): void => {\n        // Check if location\n        if (!(event.target as HTMLElement).dataset.coords) {\n            this.clearBoardSelection();\n            return;\n        }\n\n        // peel off coords\n        const [y, x] = (event.target as HTMLElement).dataset.coords.split(\",\").map(el => +el);\n\n        // check if there is a selected stone, and if so, check if\n        // the event's target is a valid destination\n        if (\n            this._board.hasStoneSelected\n            &&\n            this._referee.moveIsValid({\n                from: this._board.selectedStone.v2,\n                to: new V2(x,y),\n            }, this._board)\n            ) {\n                this._board.moveStone({\n                    from: this._board.selectedStone.v2,\n                    to: new V2(x,y),\n                });\n                this._boardView.render();\n        }\n\n        this.selectNewStone(x,y);\n    }\n\n    selectNewStone(x:number, y:number) {\n        // if stone is a valid selection, clear all and select stone\n        if (!this._board.getStoneRef(x,y).isFilled) {\n            // Don't move on to render if not filled\n            this.clearBoardSelection();\n            return;\n        }\n        this._board.selectStone(x,y);\n\n        // find possible moves from selection\n        const moves = this._referee.findMovesFrom(new V2(x,y), this._board);\n        this._validMoveElement.updateList(moves);\n\n        // render when all the calcs are done!\n        this._boardView.render();\n    }\n\n    clearBoardSelection() {\n        this._board.clearStoneSelect();\n        this._validMoveElement.clearList();\n        this._boardView.render();\n    }\n}","import V2 from \"../util/V2\";\n\nexport interface Move {\n    from: V2;\n    to: V2;\n}\n\nexport default class MoveList {\n    _moveList: Move[] = [];\n\n    constructor(moveList?: Move[]) {\n        if (moveList && moveList.length) {\n            this._moveList = moveList;\n        }\n    }\n\n    get length() {\n        return this._moveList.length;\n    }\n\n    addMove(move: Move): void {\n        this._moveList.push(move);\n    }\n\n    map(func: (move: Move) => any): any[] {\n        return this._moveList.map(func);\n    }\n}","import Geometry from \"./Geometry\";\nimport MoveList, { Move } from \"./MoveList\";\nimport V2 from \"../util/V2\";\nimport Board from \"../Board/Board\";\nimport { Translation } from \"./Translation\";\n\nexport default class Referee {\n    _geometry: Geometry\n    constructor(geometry: Geometry) {\n        this._geometry = geometry;\n    }\n\n    findMovesFrom(coords: V2, board: Board): MoveList {\n        const legalMoves = new MoveList();\n\n        this._geometry.translations\n            .forEach((t: Translation) => {\n                if (!board.getStoneRef(coords).isFilled) {\n                    return;\n                }\n\n                const from = coords;\n                const to = t(t(from));\n\n                if (!this.moveIsValid({from, to}, board)) {\n                    return;\n                };\n\n                // Whew, we made it and this move is legal:\n                legalMoves.addMove({\n                    from,\n                    to,\n                });\n            });\n\n        return legalMoves;\n    }\n\n    moveIsValid(move: Move, board:Board): boolean {\n        // make sure moves are always a distance of two\n        if (V2.distance(move.from, move.to) !== 2) {\n            return false;\n        }\n\n        if (!board.getStoneRef(move.from).isFilled) {\n            return false;\n        }\n\n        // make sure midpoint is in range and filled\n        const mid = V2.midpoint(move.from, move.to);\n        if (!(board.inBoardRange(mid) && board.getStoneRef(mid).isFilled)) {\n            return false;\n        }\n\n        // check to make sure destination location is in range and not filled location\n        // if so, valid move!\n        const dest = move.to;\n        if (!board.inBoardRange(dest)) {\n            return false;\n        }\n        const destStoneRef = board.getStoneRef(dest)\n        if (!(destStoneRef.isLocation && !destStoneRef.isFilled)) {\n            return false;\n        }\n\n        return true;\n    }\n}","import { Translation } from \"./Translation\";\nimport V2 from \"../util/V2\";\n\nexport default class Geometry {\n    private _translations: Translation[];\n    \n    constructor(t: Translation[]) {\n        this._translations = t;\n    }\n\n    get translations(): Translation[] {\n        return this._translations;\n    }\n}\n\nconst cartesianMoveList = [\n    // up\n    (coords: V2) => V2.add(new V2(0,-1), coords),\n    // down\n    (coords: V2) => V2.add(new V2(0,1), coords),\n    // left\n    (coords: V2) => V2.add(new V2(-1,0), coords),\n    // right\n    (coords: V2) => V2.add(new V2(1,0), coords),\n]\n\n\nconst CartesianGeometry = new Geometry(cartesianMoveList);\nexport {\n    CartesianGeometry\n}","import '../styles/main.scss';\n\nimport Board from './Board/Board';\nimport BoardView from './Board/BoardView';\nimport constants from './constants';\nimport Controller from './Controller';\nimport Referee from './logic/Referee';\nimport { CartesianGeometry } from './logic/geometry';\n\nconst initialBoard = `\n0110\nx111\n1011\n`;\n\n// Board setup\nconst board = Board.fromString(initialBoard);\nconst boardContainer = document.querySelector(constants.BOARD_CONTAINER) as HTMLElement;\nconst boardView = new BoardView(boardContainer, board);\n\n// Move refereeing\nconst referee = new Referee(CartesianGeometry);\n\nconst controller = new Controller(boardContainer, boardView, referee);\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}